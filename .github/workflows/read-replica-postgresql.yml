name: read-replica-postgresql

on:
  push:
    paths:
      - "read-replica-postgresql/**"
    branches: [main]
  pull_request:
    paths:
      - "read-replica-postgresql/**"
    types:
      - opened
      - synchronize
      - reopened

jobs:
  container-job:
    # Containers must run in Linux based operating systems
    runs-on: ubuntu-latest
    # Service containers to run with `container-job`
    services:
      postgresql-master:
        image: 'bitnami/postgresql:latest'
        ports:
          - '5432'
        volumes:
          - 'postgresql_master_data:/bitnami/postgresql'
        env:
          POSTGRESQL_REPLICATION_MODE: master
          POSTGRESQL_REPLICATION_USER: repl_user
          POSTGRESQL_REPLICATION_PASSWORD: repl_password
          POSTGRESQL_USERNAME: my_user
          POSTGRESQL_PASSWORD: my_password
          POSTGRESQL_DATABASE: my_database
      postgresql-slave:
        image: 'bitnami/postgresql:latest'
        ports:
          - '5432'
#         options:
#           depends_on: postgresql-master
        env:
          POSTGRESQL_REPLICATION_MODE: slave
          POSTGRESQL_REPLICATION_USER: repl_user
          POSTGRESQL_REPLICATION_PASSWORD: repl_password
          POSTGRESQL_MASTER_HOST: postgresql-master
          POSTGRESQL_PASSWORD: my_password
          POSTGRESQL_MASTER_PORT_NUMBER: 5432
  build:
    name: Run Unit & Integration Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up JDK 17
        uses: actions/setup-java@v3.0.0
        with:
          java-version: 17
          distribution: "microsoft"
          cache: "maven"
      - name: Build and analyze
        run: |
          cd read-replica-postgresql
          chmod +x mvnw
          ./mvnw clean package
