name: spring-boot-strategy-plugin-native

on:
  push:
    paths:
      - "spring-boot-strategy-plugin/**"
    branches: [main]
  pull_request:
    paths:
      - "spring-boot-strategy-plugin/**"
    types:
      - opened
      - synchronize
      - reopened

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  VERSION: latest

jobs:
  build:
    name: Run Unit & Integration Tests
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    defaults:
      run:
        working-directory: spring-boot-strategy-plugin
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis

      - uses: graalvm/setup-graalvm@v1
        with:
          version: 'latest'
          java-version: '17'
          components: 'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          cache: 'gradle'
          native-image-job-reports: 'true'
      
      - name: Printing versions
        run: |
          echo "GRAALVM_HOME: $GRAALVM_HOME"
          echo "JAVA_HOME: $JAVA_HOME"
          java --version
          gu --version
          native-image --version

      - name: Build and analyze
        run: ./gradlew clean build --info

      - if: ${{ github.ref == 'refs/heads/main' }}
        name: Build container image
        run: ./gradlew bootBuildImage --imageName ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/spring-boot-strategy-plugin:${{ env.VERSION }}
      - if: ${{ github.ref == 'refs/heads/main' }}
        name: OCI image vulnerability scanning
        uses: anchore/scan-action@v3
        id: scan
        with:
          image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/spring-boot-strategy-plugin:${{ env.VERSION }}
          fail-build: false
          severity-cutoff: high
      - if: ${{ github.ref == 'refs/heads/main' }}
        name: Log in to the Container registry
        uses: docker/login-action@ec9cdf07d570632daeb912f5b2099cb9ec1d01e6
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - if: ${{ github.ref == 'refs/heads/main' }}
        name: Publish container image
        run: docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/spring-boot-strategy-plugin:${{ env.VERSION }}
