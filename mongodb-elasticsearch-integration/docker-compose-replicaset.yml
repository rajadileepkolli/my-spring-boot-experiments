version: '3.8' # specify docker-compose version

# Define the services/containers to be run
services:
  mongo1:
    image: mongo
    container_name: mongo1
    command: [ "--replSet", "my-replica-set", "--bind_ip_all", "--port", "27017" ]
    volumes:
      - ./data/mongo-1:/data/db
    ports:
      - "27017:27017"
    healthcheck:
      test: test $$(echo "rs.initiate({_id:'my-replica-set',members:[{_id:0,host:\"mongo1:27017\"},{_id:1,host:\"mongo2:27018\"},{_id:2,host:\"mongo3:27019\"}]}).ok || rs.status().ok" | mongo --port 27017 --quiet) -eq 1
      interval: 10s
      start_period: 30s

  mongo2:
    image: mongo
    container_name: mongo2
    command: [ "--replSet", "my-replica-set", "--bind_ip_all", "--port", "27018" ]
    volumes:
      - ./data/mongo-2:/data/db
    ports:
      - "27018:27018"

  mongo3:
    image: mongo
    container_name: mongo3
    command: [ "--replSet", "my-replica-set", "--bind_ip_all", "--port", "27019" ]
    volumes:
      - ./data/mongo-3:/data/db
    ports:
      - "27019:27019"

  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:8.2.2
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - esdata1:/usr/share/elasticsearch/data

volumes:
  mongodata:
  esdata1:
    driver: local
